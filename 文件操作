FILE * fp=fopen("student.txt","w")          w 打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。
                                            w+ 打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。
                                            wb 只写方式打开或新建一个二进制文件，只允许写数据。
                                            wb+ 读写方式打开或建立一个二进制文件，允许读和写。
                                            r 打开只读文件，该文件必须存在，否则报错。
                                            r+ 打开可读写的文件，该文件必须存在，否则报错。
                                            rb+ 读写方式打开一个二进制文件，只允许读写数据。
                                            a 以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。(EOF符保留)
                                            a+ 以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，即文件原先的内容会被保留。 (原来的EOF符不保留)
                                            ab+ 读写打开一个二进制文件，允许读或在文件末追加数据。

写入 "w"
      fwrite(指向数组或结构体的指针,单个数组里面内容的大小,数量,文件指针)（注意返回0代表写入失败，成功返回数量）
      fputc(单个字符,fp)                            //写入单个字符  指针后移一位
      fputs(字符串，fp)                             //写入字符串  指针后移一位




读取 "r"
      fread(指向数组或结构体的指针,单个数组里面内容的大小,数量,文件指针)
      fgetc(fp)                            //返回值为单个字符 或者 读不到时返回EOF 读取一次指针移动一个字符
      fegts(char[],读取的个数,fp)           //返回值为一行字符串 或者 读不到时返回NULL  指针后移
      fread(char[],每个数据所占空间大小，读取个数，fp)         //返回值为读取的个数   可利用返回值定位到char[]末尾赋值'\0' 



文件的定位
      fseek(fp,需要定位到的第n个，SEEK_SET)                  //SEEK_SET 文件开头   返回值为
                                                           //SEEK_END 文件尾
                                                           //SEEK_CUR 当前位置
      rewind（fp）                                          //将文件指针指向开头
      ftell(fp)                                             //返回当前文件指针位置
